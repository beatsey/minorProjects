'''
Каждому по компьютеру

В каждом новом учебном году на занятия в компьютерные классы Дворца Творчества Юных пришли учащиеся, которые были разбиты на N групп. В i-й группе оказалось Xi человек. Тут же перед директором встала серьезная проблема: как распределить группы по аудиториям. Во дворце имеется M >= N аудиторий, в j-й аудитории имеется Yj компьютеров. Для занятий необходимо, чтобы у каждого учащегося был компьютер и еще один компьютер был у преподавателя. Переносить компьютеры из одной аудитории в другую запрещается. В одной аудитории одновременно может находиться только одна группа. Напишите программу, которая найдет, какое максимальное количество групп удастся одновременно распределить по аудиториям, чтобы всем учащимся в каждой группе хватило компьютеров, и при этом остался бы ещё хотя бы один для учителя.

Формат ввода
На первой строке входного файла расположены числа N и M (1<=N<=M<=1000). На второй строке расположено N чисел - X1, X2, …, XN (1<=Xi<=1000). На третьей строке расположено M чисел Y1, …, YM (1<=Yi<=1000).

Формат вывода
Выведите на первой строке число P - количество групп, которые удастся распределить по аудиториям. На второй строке выведите распределение групп по аудиториям - N чисел, i-е число должно соответствовать номеру аудитории, в которой должна заниматься i-я группа. (Нумерация как групп, так и аудиторий, начинается с 1). Если i-я группа осталась без аудитории, i-е число должно быть равно 0. Если допустимых распределений несколько, выведите любое из них.

Примеры
1 1
1
2

1
1


1 1
1
1

0
0


3 4
5 3 4
3 5 3 6

2
0 2 4


3 3
1 2 3
3 4 2

3
3 1 2
'''

input()
x = sorted((int(a), i) for i, a in enumerate(input().split()))
y = sorted((int(a), i) for i, a in enumerate(input().split()))

group = 0
auditory = 0
used = [0] * len(x)

while group < len(x) and auditory < len(y):
    if x[group][0] < y[auditory][0]:
        used[x[group][1]] = y[auditory][1] + 1
        group += 1
    auditory += 1

print(group)
print(*used)