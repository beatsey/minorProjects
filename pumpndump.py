"""
C. Накачка и сброс (20 баллов)
Ограничение времени  1 секунда
Ограничение памяти  64Mb
Ввод  стандартный ввод или input.txt
Вывод  стандартный вывод или output.txt

Pump'n'dump (накачка и сброс) - это схема относительно честного отъема денег. Она выглядит следуюшим образом. Несколько крупных игроков или много мелких договариваются вместе купить малоизвестную бумагу с низкой ценой и объёмом торгов. Это приводит к мгновенному взлету цены (pump), далее приходят неопытные игроки в надежде успеть заработать на таком росте. В этот момент организаторы схемы начнают все продавать (dump). Весь процесс занимает от нескольких минут до нескольких часов.

Ваша задача найти самый сильный pump'n'dump бумаги на заданном промежутке времени. Для этого для каждого дня определим число pnd, равное отношению максимальной цены бумаги в данный день к максимуму из цен открытия и закрытия в тот же день. Нужно найти день, когда pnd был максимален и его величину.

Формат ввода
На вход подаётся много-много строк в формате дата цена. Самая первая цена за день - цена открытия. Самая последняя цена за день - цена закрытия. Гарантируется, что цены идут в хронологическом порядке.

Для считывания данных удобно использовать конструкцию:

with open('input.txt') as f:
    x = f.read()
 
Формат вывода
Выведите самое большое число pnd

Пример 1
Ввод
2020-07-19 18:00:00 20
2020-07-19 19:00:00 10
2020-07-19 20:00:00 30
2020-07-19 21:00:00 40
Вывод
1

Пример 2
Ввод
2020-07-19 21:00:00 20
2020-07-19 22:00:00 10
2020-07-19 23:00:00 40
2020-07-20 00:00:00 50
2020-07-20 01:00:00 10
2020-07-20 02:00:00 20
2020-07-20 03:00:00 15
2020-07-20 04:00:00 60
2020-07-20 05:00:00 10
Вывод
1.2

Пример 3
Ввод
2021-03-01 09:30:00 690
2021-03-01 10:30:00 703
2021-03-01 11:30:00 711
2021-03-01 12:30:00 714
2021-03-01 13:30:00 709
2021-03-01 14:30:00 710
2021-03-01 15:30:00 712
2021-03-02 09:30:00 719
2021-03-02 10:30:00 709
2021-03-02 11:30:00 705
2021-03-02 12:30:00 704
2021-03-02 13:30:00 699
2021-03-02 14:30:00 691
2021-03-02 15:30:00 686
2021-03-03 09:30:00 690
2021-03-03 10:30:00 679
2021-03-03 11:30:00 693
2021-03-03 12:30:00 680
2021-03-03 13:30:00 680
2021-03-03 14:30:00 666
2021-03-03 15:30:00 657
Вывод
1.0043478260869565
"""
import numpy as np
dictionary={}

with open('input.txt') as f:
    lines = f.read().split('\n')
    for line in lines:
        inp = line.split(' ')
        value = float(inp[2])
        if inp[0] in dictionary:
            if value>dictionary[inp[0]][1]:
                dictionary[inp[0]][1]=value

            dictionary[inp[0]][2]=value
        else:
            dictionary[inp[0]]=[value,value,value] # [open, max, last]

if dictionary:
    currentMaxPnd=-1
    for day in dictionary:
        if dictionary[day][2]>dictionary[day][0]:
            pnd = dictionary[day][1]/dictionary[day][2]
        else:
            pnd = dictionary[day][1]/dictionary[day][0]
        if pnd>currentMaxPnd:
            currentMaxPnd=pnd
            
    if(currentMaxPnd-int(currentMaxPnd)==0):
        print(int(currentMaxPnd))
    else:
        print(currentMaxPnd)