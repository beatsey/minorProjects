"""
Поиск в сломанном массиве

Произошла ошибка при копировании из одной структуры данных в другую. Массив чисел хранился в кольцевом буфере и был отсортирован по возрастанию, в нём можно было найти элемент за логарифмическое время. Данные были скопированы из кольцевого буфера в обычный массив, в результате они стали циклически сдвинуты. Нужно обеспечить возможность находить элемент за логарифмическое время.

Формат ввода
Функция принимает массив натуральных чисел и скомое число k. Длина массива не превосходит 10000. Элементы массива и число k не превосходят по значению 10000.

Формат вывода
Функция должна вернуть индекс элемента, равного k, если такой есть в массиве (нумерация с нуля). Если элемент не найден, функция должна вернуть -1.
Изменять массив нельзя.

Примеры
9
5
19 21 100 101 1 4 5 7 12

6


2
1
5 1

1

"""
def broken_search(nums, target) -> int:
    def get_spike_index(nums) -> int:
        # Ищем границу
        r = len(nums) - 1
        l = 0
        while (l <= r):
            p = (l + r) // 2
            if nums[p] >= nums[r]:
                l = p + 1
            else:
                r = p
        return r
    
    s = get_spike_index(nums)
    
    if target >= nums[0] and s>0:
        l, r = 0, s - 1
    elif target <= nums[-1]:
        l, r = s, len(nums) - 1
    else:
        return -1
    
    # бинарный поиск
    while l <= r:
        p = (l + r) // 2
        if target <= nums[p]:
            r = p - 1
        else:
            l = p + 1
            
    return l if l != len(nums) and target == nums[l] else -1